{"version":3,"sources":["lib.js","App.js","index.js"],"names":["CONTRACT_ADDRESS","HASH_SCRETE","eztz","window","eztzWatch","console","log","Promise","resolve","then","contract","watch","storage","map","_ref","text","args","hash","string","name","replace","match","String","fromCharCode","parseInt","certNum","node","setProvider","compose","withState","email","phone","certificate","withHandlers","validate","props","event","data","setData","crypto","createHmac","update","concat","digest","find","cert","validateStorage","Object","objectSpread","lifecycle","componentDidMount","_this$props","this","react_default","a","createElement","className","type","value","placeholder","onChange","ev","target","trim","onClick","ReactDOM","render","App","document","getElementById"],"mappings":"uNAIMA,UAAmB,wCACnBC,EAAc,4BAGdC,EAAOC,OAAOD,KAGb,SAASE,IAEd,OADAC,QAAQC,IAAI,kCAAmCN,GACxCO,QAAQC,UACZC,KAAK,kBAAK,IAAIF,QAAQ,SAAAC,GAAO,OAAIN,EAAKQ,SAASC,MAAMX,EAAkB,EAAGQ,OAC1EC,KAAK,SAAAG,GAAO,OAAIA,EAAQC,IAAI,SAAAC,GAAA,IAiBHC,EAjBMC,EAAHF,EAAGE,KAAH,MAAe,CAC1CC,KAAMD,EAAK,GAAGE,OACdC,MAewBJ,EAfJC,EAAK,GAAGA,KAAK,GAAGE,OAgBhCH,EAAKK,QAAQ,kBACb,SAAUC,GACL,OAAOC,OAAOC,aAAaC,SAASH,EAAMD,QAAQ,OAAQ,IAAK,QAjBxEK,QAAST,EAAK,GAAGA,KAAK,GAAGE,YAT/BhB,EAAKwB,KAAKC,YAAY,+BCLtB,IAOeC,cACbC,YAAU,OAAQ,UARC,CACnBC,MAAO,GACPC,MAAO,GACPnB,QAAS,GACToB,YAAa,OAKbC,YAAa,CACXC,SAAU,SAAAC,GAAK,OAAI,SAAAC,GAAS,IAClBC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QAIRN,EDGL,SAAyBF,EAAOC,EAAOnB,GAC5C,IAAMK,EAAOsB,IACVC,WAAW,SAAUvC,GACrBwC,OAFU,GAAAC,OAEAZ,GAFAY,OAEQX,IAClBY,OAAO,OAGV,OADAtC,QAAQC,IAAI,CAAEwB,QAAOC,QAAOd,SACrBL,EAAQgC,KAAK,SAAAC,GAAI,OAAIA,EAAK5B,OAASA,ICVlB6B,CAHcT,EAA1BP,MAA0BO,EAAnBN,MAAmBM,EAAZzB,SAInBoB,GAAaM,EAAQS,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAN,CAAYL,qBAEvCiB,YAAU,CACRC,kBADQ,WACY,IAAAC,EACQC,KAAKjB,MAAvBE,EADUc,EACVd,KAAMC,EADIa,EACJb,QACd/B,QAAQC,UACLC,KAAKL,GACLK,KAAK,SAAAG,GAAO,OAAI0B,EAAQS,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAN,CAAYzB,kBAhB7BgB,CAmBb,SAA0BO,GAAO,IACzBE,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,QAASJ,EAAaC,EAAbD,SAGvB,OACEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAOrB,EAAKP,MACZ6B,YAAY,QACZC,SAAU,SAAAC,GAAE,OAAIvB,EAAQS,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAN,CAAYP,MAAO+B,EAAGC,OAAOJ,MAAMK,cAG9DV,EAAAC,EAAAC,cAAA,2CAEEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAOrB,EAAKN,MACZ4B,YAAY,QACZC,SAAU,SAAAC,GAAE,OAAIvB,EAAQS,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAAN,CAAYN,MAAO8B,EAAGC,OAAOJ,MAAMK,cAG9DV,EAAAC,EAAAC,cAAA,UAAQS,QAAS9B,GAAjB,YAICG,EAAKL,aACJqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,mBAAWlB,EAAKL,YAAYb,MAC5BkC,EAAAC,EAAAC,cAAA,uCAA+BlB,EAAKL,YAAYP,aCxD1DwC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4b7e1f39.chunk.js","sourcesContent":["import crypto from 'crypto'\nimport 'eztz.js/dist/eztz.min.js'\n\n// some constants\nconst CONTRACT_ADDRESS = 'KT1KrvJxNkudoCp5f8d5tzNFLcTbppfMs84p'\nconst HASH_SCRETE = 'TEZOS_BLOCKCHAIN_CAMP_1ST'\n\n// configure eztz\nconst eztz = window.eztz\neztz.node.setProvider(\"http://13.125.254.165:8732/\")\n\nexport function eztzWatch() {\n  console.log('Fetching contract stroage from ', CONTRACT_ADDRESS)\n  return Promise.resolve()\n    .then(() =>new Promise(resolve => eztz.contract.watch(CONTRACT_ADDRESS, 2, resolve)))\n    .then(storage => storage.map(({ args }) => ({\n      hash: args[0].string,\n      name: unicodeToChar(args[1].args[0].string),\n      certNum: args[1].args[1].string,\n    })));\n}\n\nexport function validateStorage(email, phone, storage) {\n  const hash = crypto\n    .createHmac('sha256', HASH_SCRETE)\n    .update(`${email}${phone}`)\n    .digest('hex')\n\n  console.log({ email, phone, hash });\n  return storage.find(cert => cert.hash === hash);\n}\n\nexport function unicodeToChar(text) {\n   return text.replace(/\\\\u[\\dA-F]{4}/gi,\n          function (match) {\n               return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16));\n          });\n}\n","import React from 'react'\nimport { compose, withState, withHandlers, lifecycle } from 'recompose'\nimport { validateStorage, eztzWatch, unicodeToChar } from './lib'\n\nconst defaultState = {\n  email: '',\n  phone: '',\n  storage: [],\n  certificate: null\n}\n\nexport default compose(\n  withState('data', 'setData', defaultState),\n  withHandlers({\n    validate: props => event => {\n      const { data, setData } = props\n      const { email, phone, storage } = data\n\n      // find if this certificate exists in the storage\n      const certificate = validateStorage(email, phone, storage);\n      if(certificate) setData({ ...data, certificate });\n  }}),\n  lifecycle({\n    componentDidMount() {\n      const { data, setData } = this.props;\n      Promise.resolve()\n        .then(eztzWatch)\n        .then(storage => setData({ ...data, storage }))\n    }\n  })\n)(function TezosCertificate(props) {\n  const { data, setData, validate } = props;\n\n\n  return (\n    <div className=\"app\">\n      <label>\n        Email\n        <input\n          type=\"text\"\n          value={data.email}\n          placeholder=\"email\"\n          onChange={ev => setData({ ...data, email: ev.target.value.trim() })}\n        />\n      </label>\n      <label>\n        Phone Number (last 4-digit)\n        <input\n          type=\"text\"\n          value={data.phone}\n          placeholder=\"phone\"\n          onChange={ev => setData({ ...data, phone: ev.target.value.trim() })}\n        />\n      </label>\n      <button onClick={validate}>\n        Validate\n      </button>\n\n      {data.certificate &&\n        <div className=\"your-ceritificate\">\n          <h4>Name: {data.certificate.name}</h4>\n          <h4>Certificate Number: 201900{data.certificate.certNum}</h4>\n        </div>\n      }\n    </div>\n  )\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}